{"version":3,"sources":["SiteInfo.js","SiteInfoForm.js","Resources.js","App.js","serviceWorker.js","index.js"],"names":["escapeRegExp","str","replace","SiteInfo","siteName","intfName","vhost","arguments","length","undefined","podDomain","Object","classCallCheck","this","_siteName","_intfName","_vhost","_podDomain","other","value","trim","toLowerCase","result","exec","suffix","intfNameDashed","suffixDashed","concat","hostName","baseUri","cpRoot","cfgRoot","SiteInfoForm","props","_this","possibleConstructorReturn","getPrototypeOf","call","siteInfo","state","siteNameChanged","bind","assertThisInitialized","intfNameChanged","vhostChanged","e","_this2","setState","target","siteInfoChanged","_this3","_this4","react_default","a","createElement","className","onChange","defaultValue","Component","ResourceGrid","children","Resource","resource","siteInfoProp","ResourceCore","label","Fragment","readOnly","type","App","propName","newSiteInfo","copy","SiteInfoForm_SiteInfoForm","appInfo","name","version","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.32e61d8d.chunk.js","sourcesContent":["function escapeRegExp(str) {\r\n  return str.replace(/[[\\]/{}()*+?.\\\\^$|]/g, \"\\\\$&\");\r\n}\r\n\r\nexport default class SiteInfo {\r\n  constructor(siteName, intfName, vhost = \"\", podDomain = \"custhelp.com\") {\r\n    this._siteName = siteName;\r\n    this._intfName = intfName;\r\n    this._vhost = vhost;\r\n    this._podDomain = podDomain;\r\n  }\r\n\r\n  get siteName() {\r\n    return this._siteName;\r\n  }\r\n\r\n  set siteName(value) {\r\n    this._siteName = value.trim().toLowerCase();\r\n  }\r\n\r\n  get intfName() {\r\n    return this._intfName;\r\n  }\r\n\r\n  set intfName(value) {\r\n    this._intfName = value.trim().toLowerCase();\r\n  }\r\n\r\n  get vhost() {\r\n    return this._vhost;\r\n  }\r\n\r\n  set vhost(value) {\r\n    this._vhost = value.trim().toLowerCase();\r\n  }\r\n\r\n  get podDomain() {\r\n    return this._podDomain;\r\n  }\r\n\r\n  set podDomain(value) {\r\n    this._podDomain = value.trim().toLowerCase();\r\n  }\r\n\r\n  get suffix() {\r\n    let result = /__.+$/.exec(this.siteName);\r\n    return result ? result[0] : '';\r\n  }\r\n  get suffixDashed() {\r\n    let suffix = this.suffix;\r\n    return suffix ? suffix.replace(/_/g, '-') : '';\r\n  }\r\n\r\n  get intfNameDashed() {\r\n    let intfName = this.intfName;\r\n    return intfName ? intfName.replace(/_/g, '-') : '';\r\n  }\r\n\r\n  get hostName() {\r\n    return this.vhost || this.intfNameDashed + this.suffixDashed + '.' + this.podDomain;\r\n  }\r\n\r\n  get baseUri() {\r\n    return `https://${this.hostName}/`;\r\n  }\r\n\r\n  get cpRoot() {\r\n    return `${this.baseUri}app/`;\r\n  }\r\n\r\n  get cpHome() {\r\n    return `${this.cpRoot}home`;\r\n  }\r\n\r\n  get cpAdmin() {\r\n    return `${this.baseUri}ci/admin`;\r\n  }\r\n\r\n  get cpAbout() {\r\n    return `${this.baseUri}ci/about`;\r\n  }\r\n\r\n  get cfgRoot() {\r\n    return `${this.baseUri}cgi-bin/${this.intfName}.cfg`;\r\n  }\r\n\r\n  get launchPage() {\r\n    return `${this.cfgRoot}/php/admin/launch.php`;\r\n  }\r\n\r\n  get installer() {\r\n    return `https://installer-${this.siteName.replace(/_/g, '-')}.${this.podDomain}` +\r\n      `/RightNow.Installer.application?launch=${this.cfgRoot}&dbname=${this.siteName}` +\r\n      '&trace=true&lang=en_GB';\r\n  }\r\n\r\n  get accessInterface() {\r\n    return `${this.cfgRoot}/php/admin/session/login.php`;\r\n  }\r\n\r\n  get scriptsRoot() {\r\n    return `${this.cfgRoot}/php/custom/`;\r\n  }\r\n\r\n  get restApiRoot() {\r\n    return `${this.baseUri}services/rest/connect`;\r\n  }\r\n\r\n  get connectApiWsdl() {\r\n    return `${this.baseUri}services/soap/connect/soap?wsdl=typed`;\r\n  }\r\n\r\n  get connectApiWsdl1_2() {\r\n    return `${this.baseUri}services/soap/connect/soap?wsdl=typed_v1.2`;\r\n  }\r\n\r\n  get kfApiWsdl() {\r\n    return `${this.baseUri}services/soap/connect/kf_soap?wsdl`;\r\n  }\r\n\r\n  get chatApiWsdl() {\r\n    return `${this.baseUri}services/soap/connect/chat_soap?wsdl`;\r\n  }\r\n\r\n  get legacyConnectApiWsdl() {\r\n    return `${this.cfgRoot}/services/soap?wsdl=typed`;\r\n  }\r\n\r\n  get legacyConnectApiWsdl1_2() {\r\n    return `${this.cfgRoot}/services/soap?wsdl=typed_v1.2`;\r\n  }\r\n\r\n  get legacyKfApiWsdl() {\r\n    return `${this.cfgRoot}/services/kf_soap?wsdl`;\r\n  }\r\n\r\n  get legacyChatApiWsdl() {\r\n    return `${this.cfgRoot}/services/chat_soap?wsdl`;\r\n  }\r\n\r\n  get launchArgs() {\r\n    return `launch=${this.cfgRoot} dbname=${this.siteName} isNetworkDeployed=true`;\r\n  }\r\n\r\n  get cpAdminRegex() {\r\n    return `https:\\\\/\\\\/${this.vhost ? escapeRegExp(this.vhost) : this.intfNameDashed}` +\r\n           `(--[\\\\w-]*)?\\\\.${escapeRegExp(this.podDomain)}\\\\/ci\\\\/admin.*`;\r\n  }\r\n\r\n  get newConnectSessionCmdlet() {\r\n    return `New-ConnectSession (intf ${this.intfName} ${this.siteName}` +\r\n           `${this.vhost ? ` -HostName ${this.vhost}` : ''})`;\r\n  }\r\n\r\n  get kaContentApiRoot() {\r\n    return `https://${this.intfNameDashed}${this.suffixDashed}-irs.${this.podDomain}/km`;\r\n  }\r\n\r\n  get kaSearchApiRoot() {\r\n    return `https://${this.intfNameDashed}${this.suffixDashed}-qp.${this.podDomain}/srt`;\r\n  }\r\n\r\n  isEqual(other) {\r\n    return other === this || (\r\n      this.siteName === other.siteName &&\r\n      this.intfName === other.intfName &&\r\n      this.vhost === other.vhost &&\r\n      this.podDomain === other.podDomain\r\n    );\r\n  }\r\n\r\n  copy() {\r\n    return new SiteInfo(this.siteName, this.intfName, this.vhost, this.podDomain);\r\n  }\r\n  \r\n}","import React, { Component } from 'react';\r\nimport SiteInfo from './SiteInfo';\r\nimport './SiteInfoForm.css';\r\n\r\nexport default class SiteInfoForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.siteInfo = props.siteInfo || new SiteInfo('example__pro', 'example_en');\r\n\r\n    this.state = {\r\n      siteName:  this.siteInfo.siteName,\r\n      intfName:  this.siteInfo.intfName,\r\n      vhost:  this.siteInfo.vhost,\r\n      podDomain:  this.siteInfo.podDomain\r\n    };\r\n\r\n    this.siteNameChanged = this.siteNameChanged.bind(this);\r\n    this.intfNameChanged = this.intfNameChanged.bind(this);\r\n    this.vhostChanged = this.vhostChanged.bind(this);\r\n  }\r\n\r\n  siteNameChanged(e) {\r\n    this.setState({\r\n      siteName: e.target.value\r\n    }, () => this.props.siteInfoChanged('siteName', this.state.siteName));\r\n  }\r\n\r\n  intfNameChanged(e) {\r\n    this.setState({\r\n      intfName: e.target.value\r\n    }, () => this.props.siteInfoChanged('intfName', this.state.intfName));\r\n  }\r\n\r\n  vhostChanged(e) {\r\n    this.setState({\r\n      vhost: e.target.value\r\n    }, () => this.props.siteInfoChanged('vhost', this.state.vhost));\r\n  }\r\n\r\n  // componentDidUpdate(prevProps, prevState) {\r\n  //   let hasChanged = false;\r\n\r\n  //   this.siteInfo.siteName = this.state.siteName;\r\n  //   this.siteInfo.intfName = this.state.intfName;\r\n  //   this.siteInfo.vhost = this.state.vhost;\r\n  //   this.siteInfo.podDomain = this.state.podDomain;\r\n\r\n  //   if (hasChanged) this.props.siteInfoChanged(this.siteInfo);\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"SiteInfoForm\">\r\n        <div>\r\n          <label>Site name (including suffix):</label>\r\n          <input onChange={this.siteNameChanged} defaultValue={this.state.siteName} />\r\n        </div>\r\n\r\n        <div>\r\n          <label>Interface name:</label>\r\n          <input onChange={this.intfNameChanged} defaultValue={this.state.intfName} />\r\n        </div>\r\n\r\n        <div>\r\n          <label>Virtual Hostname (blank for none):</label>\r\n          <input onChange={this.vhostChanged} defaultValue={this.state.vhost} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport './Resources.css';\r\n\r\nexport function ResourceGrid(props) {\r\n  return (\r\n    <div className=\"ResourceGrid\">\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function Resource(props) {\r\n  let resource = props.siteInfo[props.siteInfoProp];\r\n  return (\r\n    <ResourceCore label={props.label} resource={resource} />\r\n  );\r\n}\r\n\r\nfunction ResourceCore(props) {\r\n  return (\r\n    <>\r\n      <label className=\"Resource-Label\">{props.label}</label>\r\n      <input className=\"Resource-Input\" readOnly type=\"text\" value={props.resource}/>\r\n    </>\r\n  );\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport SiteInfo from './SiteInfo';\r\nimport SiteInfoForm from './SiteInfoForm';\r\nimport { ResourceGrid, Resource } from './Resources';\r\nimport appInfo from '../package.json';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      siteInfo: new SiteInfo('example__pro', 'example_en'),\r\n    };\r\n  };\r\n\r\n  siteInfoChanged(propName, value) {\r\n    let newSiteInfo = this.state.siteInfo.copy();\r\n    newSiteInfo[propName] = value;\r\n    this.setState({\r\n      siteInfo: newSiteInfo\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let siteInfo = this.state.siteInfo;\r\n    \r\n    return (\r\n      <div className=\"App\">\r\n        <SiteInfoForm siteInfo={siteInfo} siteInfoChanged={this.siteInfoChanged.bind(this)}/>\r\n\r\n        <h2>General URLs</h2>\r\n        <ResourceGrid>\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"baseUri\" label=\"Base URI\" />\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"cpRoot\" label=\"Customer Portal root\" />\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"cpHome\" label=\"Customer Portal home\" />\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"cpAdmin\" label=\"Customer Portal administration\" />\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"cpAbout\" label=\"Customer Portal about page\" />\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"launchPage\" label=\"Launch page\" />\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"installer\" label=\"ClickOnce Installer\" />\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"scriptsRoot\" label=\"Custom Scripts root\" />\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"restApiRoot\" label=\"REST API root\" />\r\n        </ResourceGrid>\r\n\r\n        <h2>Soap URLs</h2>\r\n        \r\n        <h3>August 2017+ SOAP URLs</h3>\r\n        <ResourceGrid>\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"connectApiWsdl\" label=\"Connect web service WSDL\" />\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"connectApiWsdl1_2\" label=\"Connect web service WSDL (version 1.2)\" />\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"kfApiWsdl\" label=\"Knowledge Foundation web service WSDL\" />\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"chatApiWsdl\" label=\"Chat web service WSDL\" />\r\n        </ResourceGrid>\r\n        \r\n        <h3>Legacy SOAP URLs</h3>\r\n        <ResourceGrid>\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"legacyConnectApiWsdl\" label=\"Connect web service WSDL\" />\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"legacyConnectApiWsdl1_2\" label=\"Connect web service WSDL (version 1.2)\" />\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"legacyKfApiWsdl\" label=\"Knowledge Foundation web service WSDL\" />\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"legacyChatApiWsdl\" label=\"Chat web service WSDL\" />\r\n        </ResourceGrid>\r\n\r\n        <h2>Other Resources</h2>\r\n        <ResourceGrid>\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"launchArgs\" label=\"Launch command line arguments\" />\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"cpAdminRegex\" label=\"Regex for matching CP Admin URLs\" />\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"newConnectSessionCmdlet\" label=\"New-ConnectSession PS Cmdlet\" />\r\n        </ResourceGrid>\r\n\r\n        <h2>Knowledge Advanced REST API</h2>\r\n        <ResourceGrid>\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"kaContentApiRoot\" label=\"Content API Root URI\" />\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"kaSearchApiRoot\" label=\"Search API Root URI\" />\r\n        </ResourceGrid>\r\n\r\n        <div className=\"App-info\">{appInfo.name} {appInfo.version}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('App-Container'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}