{"version":3,"sources":["SiteInfo.js","PodDomainSelect.js","SiteInfoForm.js","Resources.js","utils.js","App.js","serviceWorker.js","index.js"],"names":["escapeRegExp","str","replace","SiteInfo","siteName","intfName","vhost","arguments","length","undefined","podDomain","Object","classCallCheck","this","_siteName","_intfName","_vhost","_podDomain","_useInternalIdp","other","value","trim","toLowerCase","Boolean","result","exec","suffix","intfNameDashed","suffixDashed","concat","hostName","baseUri","cpRoot","cfgRoot","useInternalIdp","buiRoot","host","siteNameWithoutSuffix","firstChar","charAt","siteAlphaGroup","dcsProjectHome","PodDomainSelect","props","_this","possibleConstructorReturn","getPrototypeOf","call","state","handleChange","bind","assertThisInitialized","e","_this2","setState","target","onChange","react_default","a","createElement","className","Component","SiteInfoForm","siteInfo","siteNameChanged","intfNameChanged","vhostChanged","podDomainChanged","siteInfoChanged","_this3","_this4","_this5","defaultValue","PodDomainSelect_PodDomainSelect","ResourceGrid","children","Resource","resource","siteInfoProp","window","location","href","split","Resources_ResourceCore","label","ResourceCore","textInput","React","createRef","inputOnFocus","copyRequested","select","preventDefault","current","document","execCommand","labelContent","isUrl","rel","Fragment","readOnly","type","onFocus","ref","onClick","title","getUrlParameterByName","name","url","results","RegExp","decodeURIComponent","App","propName","newSiteInfo","copy","SiteInfoForm_SiteInfoForm","appInfo","version","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6566516d.chunk.js","sourcesContent":["function escapeRegExp(str) {\r\n  return str.replace(/[[\\]/{}()*+?.\\\\^$|]/g, \"\\\\$&\");\r\n}\r\n\r\nexport default class SiteInfo {\r\n  constructor(siteName, intfName, vhost = \"\", podDomain = \"custhelp.com\") {\r\n    this._siteName = siteName;\r\n    this._intfName = intfName;\r\n    this._vhost = vhost;\r\n    this._podDomain = podDomain;\r\n    this._useInternalIdp = true;\r\n  }\r\n\r\n  get siteName() {\r\n    return this._siteName;\r\n  }\r\n\r\n  set siteName(value) {\r\n    this._siteName = value.trim().toLowerCase();\r\n  }\r\n\r\n  get intfName() {\r\n    return this._intfName;\r\n  }\r\n\r\n  set intfName(value) {\r\n    this._intfName = value.trim().toLowerCase();\r\n  }\r\n\r\n  get vhost() {\r\n    return this._vhost;\r\n  }\r\n\r\n  set vhost(value) {\r\n    this._vhost = value.trim().toLowerCase();\r\n  }\r\n\r\n  get podDomain() {\r\n    return this._podDomain;\r\n  }\r\n\r\n  set podDomain(value) {\r\n    this._podDomain = value.trim().toLowerCase();\r\n  }\r\n\r\n  get useInternalIdp() {\r\n    return this._useInternalIdp;\r\n  }\r\n\r\n  set useInternalIdp(value) {\r\n    this._useInternalIdp = Boolean(value);\r\n  }\r\n\r\n  get suffix() {\r\n    let result = /__.+$/.exec(this.siteName);\r\n    return result ? result[0] : '';\r\n  }\r\n  get suffixDashed() {\r\n    let suffix = this.suffix;\r\n    return suffix ? suffix.replace(/_/g, '-') : '';\r\n  }\r\n\r\n  get intfNameDashed() {\r\n    let intfName = this.intfName;\r\n    return intfName ? intfName.replace(/_/g, '-') : '';\r\n  }\r\n\r\n  get hostName() {\r\n    return this.vhost || this.intfNameDashed + this.suffixDashed + '.' + this.podDomain;\r\n  }\r\n\r\n  get baseUri() {\r\n    return `https://${this.hostName}/`;\r\n  }\r\n\r\n  get cpRoot() {\r\n    return `${this.baseUri}app/`;\r\n  }\r\n\r\n  get cpHome() {\r\n    return `${this.cpRoot}home`;\r\n  }\r\n\r\n  get cpAdmin() {\r\n    return `${this.baseUri}ci/admin`;\r\n  }\r\n\r\n  get cpAbout() {\r\n    return `${this.baseUri}ci/about`;\r\n  }\r\n\r\n  get cfgRoot() {\r\n    return `${this.baseUri}cgi-bin/${this.intfName}.cfg`;\r\n  }\r\n\r\n  get launchPage() {\r\n    return `${this.cfgRoot}/php/admin/launch.php`;\r\n  }\r\n\r\n  get installer() {\r\n    return `https://installer-${this.siteName.replace(/_/g, '-')}.${this.podDomain}` +\r\n      `/RightNow.Installer.application?launch=${this.cfgRoot}&dbname=${this.siteName}` +\r\n      `&trace=true&lang=en_GB&useInternalIdp=${this.useInternalIdp}`;\r\n  }\r\n\r\n  get accessInterface() {\r\n    return `${this.cfgRoot}/php/admin/session/login.php`;\r\n  }\r\n\r\n  get scriptsRoot() {\r\n    return `${this.cfgRoot}/php/custom/`;\r\n  }\r\n\r\n  get restApiRoot() {\r\n    return `${this.baseUri}services/rest/connect`;\r\n  }\r\n\r\n  get buiRoot() {\r\n    return `${this.baseUri}AgentWeb`;\r\n  }\r\n\r\n  get buiExtensionLoader() {\r\n    return `${this.buiRoot}/module/extensibility/js/client/core/extension_loader.js`;\r\n  }\r\n\r\n  get connectApiWsdl() {\r\n    return `${this.baseUri}services/soap/connect/soap?wsdl=typed`;\r\n  }\r\n\r\n  get connectApiWsdl1_2() {\r\n    return `${this.baseUri}services/soap/connect/soap?wsdl=typed_v1.2`;\r\n  }\r\n\r\n  get kfApiWsdl() {\r\n    return `${this.baseUri}services/soap/connect/kf_soap?wsdl`;\r\n  }\r\n\r\n  get chatApiWsdl() {\r\n    return `${this.baseUri}services/soap/connect/chat_soap?wsdl`;\r\n  }\r\n\r\n  get legacyConnectApiWsdl() {\r\n    return `${this.cfgRoot}/services/soap?wsdl=typed`;\r\n  }\r\n\r\n  get legacyConnectApiWsdl1_2() {\r\n    return `${this.cfgRoot}/services/soap?wsdl=typed_v1.2`;\r\n  }\r\n\r\n  get legacyKfApiWsdl() {\r\n    return `${this.cfgRoot}/services/kf_soap?wsdl`;\r\n  }\r\n\r\n  get legacyChatApiWsdl() {\r\n    return `${this.cfgRoot}/services/chat_soap?wsdl`;\r\n  }\r\n\r\n  get launchArgs() {\r\n    return `launch=${this.cfgRoot} dbname=${this.siteName} isNetworkDeployed=true`;\r\n  }\r\n\r\n  get cpAdminRegex() {\r\n    const host = this.vhost ? escapeRegExp(this.vhost) :\r\n      `${this.intfNameDashed}(--[\\\\w-]*)?\\\\.${escapeRegExp(this.podDomain)}`;\r\n    return `https:\\\\/\\\\/${host}\\\\/ci\\\\/admin.*`;\r\n  }\r\n\r\n  get newConnectSessionCmdlet() {\r\n    return `New-ConnectSession (intf ${this.intfName} ${this.siteName}` +\r\n           `${this.vhost ? ` -HostName ${this.vhost}` : ''})`;\r\n  }\r\n\r\n  get kaContentApiRoot() {\r\n    return `https://${this.intfNameDashed}${this.suffixDashed}-irs.${this.podDomain}/km`;\r\n  }\r\n\r\n  get kaSearchApiRoot() {\r\n    return `https://${this.intfNameDashed}${this.suffixDashed}-qp.${this.podDomain}/srt`;\r\n  }\r\n\r\n  get siteNameWithoutSuffix() {\r\n    return this.siteName.replace(this.suffix, '');\r\n  }\r\n\r\n  get gitRepoSsh() {\r\n    return `git@src.rightnow.com:${this.siteNameWithoutSuffix}.git`;\r\n  }\r\n\r\n  get siteAlphaGroup() {\r\n    let firstChar = this.siteNameWithoutSuffix.charAt(0).toLowerCase();\r\n    if (firstChar >= 'a' && firstChar <= 'm')\r\n      return 'a-m';\r\n    else if (firstChar >= 'n' && firstChar <= 'z')\r\n      return 'n-z';\r\n    else\r\n      return null;\r\n  }\r\n\r\n  get dcsProjectHome() {\r\n    return \"https://alm.oraclecorp.com/naac/#projects/ocs-commercial-sites-\" + this.siteAlphaGroup;\r\n  }\r\n\r\n  get dcsMasterRoot() {\r\n    return `${this.dcsProjectHome}/scm/${this.siteNameWithoutSuffix}.git/tree?revision=master`;\r\n  }\r\n\r\n  get dcsSshOrigin() {\r\n    return \"ssh://dan.stevens%40oracle.com@alm.oraclecorp.com:2222/naac_ocs-commercial-sites-\" + this.siteAlphaGroup +\r\n           `_21750/${this.siteNameWithoutSuffix}.git`;\r\n  }\r\n\r\n  get dcsHttpsOrigin() {\r\n    return \"https://dan.stevens%40oracle.com@alm.oraclecorp.com/naac/s/naac_ocs-commercial-sites-\" + this.siteAlphaGroup +\r\n           `_21750/scm/${this.siteNameWithoutSuffix}.git`\r\n  }\r\n\r\n  isEqual(other) {\r\n    return other === this || (\r\n      this.siteName === other.siteName &&\r\n      this.intfName === other.intfName &&\r\n      this.vhost === other.vhost &&\r\n      this.podDomain === other.podDomain\r\n    );\r\n  }\r\n\r\n  copy() {\r\n    return new SiteInfo(this.siteName, this.intfName, this.vhost, this.podDomain);\r\n  }\r\n  \r\n}","import React, { Component } from 'react';\r\n\r\nexport default class PodDomainSelect extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      podDomain: props.podDomain\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({\r\n      podDomain: e.target.value\r\n    }, () => this.props.onChange(this));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"PodDomainSelect\">\r\n        <label>Pod Domain:</label>\r\n        <select onChange={this.handleChange} value={this.state.podDomain}>\r\n          <option>custhelp.com</option>\r\n          <option>rightnowdemo.com</option>\r\n          <option>cx.ukg.oraclecloud.com</option>\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport SiteInfo from './SiteInfo';\r\nimport './SiteInfoForm.css';\r\nimport PodDomainSelect from './PodDomainSelect';\r\n\r\nexport default class SiteInfoForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.siteInfo = props.siteInfo || new SiteInfo('example__pro', 'example_en');\r\n\r\n    this.state = {\r\n      siteName:  this.siteInfo.siteName,\r\n      intfName:  this.siteInfo.intfName,\r\n      vhost:  this.siteInfo.vhost,\r\n      podDomain:  this.siteInfo.podDomain\r\n    };\r\n\r\n    this.siteNameChanged = this.siteNameChanged.bind(this);\r\n    this.intfNameChanged = this.intfNameChanged.bind(this);\r\n    this.vhostChanged = this.vhostChanged.bind(this);\r\n    this.podDomainChanged = this.podDomainChanged.bind(this);\r\n  }\r\n\r\n  siteNameChanged(e) {\r\n    this.setState({\r\n      siteName: e.target.value\r\n    }, () => this.props.siteInfoChanged('siteName', this.state.siteName));\r\n  }\r\n\r\n  intfNameChanged(e) {\r\n    this.setState({\r\n      intfName: e.target.value\r\n    }, () => this.props.siteInfoChanged('intfName', this.state.intfName));\r\n  }\r\n\r\n  vhostChanged(e) {\r\n    this.setState({\r\n      vhost: e.target.value\r\n    }, () => this.props.siteInfoChanged('vhost', this.state.vhost));\r\n  }\r\n\r\n  podDomainChanged(e) {\r\n    this.setState({\r\n      podDomain: e.state.podDomain\r\n    }, () => this.props.siteInfoChanged('podDomain', this.state.podDomain));\r\n  }\r\n\r\n  // componentDidUpdate(prevProps, prevState) {\r\n  //   let hasChanged = false;\r\n\r\n  //   this.siteInfo.siteName = this.state.siteName;\r\n  //   this.siteInfo.intfName = this.state.intfName;\r\n  //   this.siteInfo.vhost = this.state.vhost;\r\n  //   this.siteInfo.podDomain = this.state.podDomain;\r\n\r\n  //   if (hasChanged) this.props.siteInfoChanged(this.siteInfo);\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"SiteInfoForm\">\r\n        <div>\r\n          <label>Site name (including suffix):</label>\r\n          <input onChange={this.siteNameChanged} defaultValue={this.state.siteName} />\r\n        </div>\r\n\r\n        <div>\r\n          <label>Interface name:</label>\r\n          <input onChange={this.intfNameChanged} defaultValue={this.state.intfName} />\r\n        </div>\r\n\r\n        <div>\r\n          <label>Virtual Hostname (blank for none):</label>\r\n          <input onChange={this.vhostChanged} defaultValue={this.state.vhost} />\r\n        </div>\r\n\r\n        <PodDomainSelect onChange={this.podDomainChanged} defaultValue={this.state.podDomain} />\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport './Resources.css';\r\nimport isUrl from 'is-url';\r\n\r\nexport function ResourceGrid(props) {\r\n  return (\r\n    <div className=\"ResourceGrid\">\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function Resource(props) {\r\n  let resource;\r\n  // Special 'siteInfoProp' for linking to this app using the give site info\r\n  if (props.siteInfoProp === 'osvcLinks') {\r\n    resource = `${window.location.href.split('?')[0]}?site=${props.siteInfo.siteName}` +\r\n               `&intf=${props.siteInfo.intfName}&host=${props.siteInfo.vhost}`;\r\n  } else {\r\n    resource = props.siteInfo[props.siteInfoProp];\r\n  }\r\n  return (\r\n    <div className=\"Resource\">\r\n      <ResourceCore label={props.label} resource={resource} />\r\n    </div>\r\n  );\r\n}\r\n\r\nclass ResourceCore extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.textInput = React.createRef();\r\n    this.inputOnFocus = this.inputOnFocus.bind(this);\r\n    this.copyRequested = this.copyRequested.bind(this);\r\n  }\r\n\r\n  inputOnFocus(e) {\r\n    e.target.select();\r\n  }\r\n\r\n  copyRequested(e) {\r\n    e.preventDefault();\r\n    this.textInput.current.select();\r\n    document.execCommand(\"copy\");\r\n  }\r\n  \r\n  render() {\r\n    const labelContent = isUrl(this.props.resource) ?\r\n      <a href={this.props.resource} target=\"_blank\" rel=\"noopener noreferrer\">{this.props.label}</a> :\r\n      <>{this.props.label}</>;\r\n    return (\r\n      <>\r\n        <label className=\"Resource-Label\">{labelContent}</label>\r\n        <input className=\"Resource-Input\" readOnly type=\"text\" value={this.props.resource} onFocus={this.inputOnFocus}\r\n               ref={this.textInput}/>\r\n        <a href=\"#\" className=\"Resource-CopyLink\" onClick={this.copyRequested} title=\"Copy to clipboard\">Copy</a>\r\n      </>\r\n    );\r\n  }\r\n}","export function getUrlParameterByName(name, url = window.location.href) {\r\n  if (!url) url = window.location.href;\r\n  url = url.toLowerCase(); // This is just to avoid case sensitiveness  \r\n  name = name.replace(/[[\\]]/g, \"\\\\$&\").toLowerCase();// This is just to avoid case sensitiveness for query parameter name\r\n  var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\r\n      results = regex.exec(url);\r\n  if (!results) return null;\r\n  if (!results[2]) return '';\r\n  return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport SiteInfo from './SiteInfo';\r\nimport SiteInfoForm from './SiteInfoForm';\r\nimport { ResourceGrid, Resource } from './Resources';\r\nimport appInfo from '../package.json';\r\nimport { getUrlParameterByName } from './utils';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const siteName = getUrlParameterByName('site') || 'example__pro';\r\n    const intfName = getUrlParameterByName('intf') || 'example_en';\r\n    const vhost = getUrlParameterByName('host') || '';\r\n\r\n    this.state = {\r\n      siteInfo: new SiteInfo(siteName, intfName, vhost),\r\n    };\r\n  };\r\n\r\n  siteInfoChanged(propName, value) {\r\n    let newSiteInfo = this.state.siteInfo.copy();\r\n    newSiteInfo[propName] = value;\r\n    this.setState({\r\n      siteInfo: newSiteInfo\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let siteInfo = this.state.siteInfo;\r\n    \r\n    return (\r\n      <div className=\"App\">\r\n        <SiteInfoForm siteInfo={siteInfo} siteInfoChanged={this.siteInfoChanged.bind(this)}/>\r\n\r\n        <h2>General URLs</h2>\r\n        <ResourceGrid>\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"baseUri\" label=\"Base URI\" />\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"cpRoot\" label=\"Customer Portal root\" />\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"cpHome\" label=\"Customer Portal home\" />\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"cpAdmin\" label=\"Customer Portal administration\" />\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"cpAbout\" label=\"Customer Portal about page\" />\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"launchPage\" label=\"Launch page\" />\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"installer\" label=\"ClickOnce Installer\" />\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"scriptsRoot\" label=\"Custom Scripts root\" />\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"restApiRoot\" label=\"REST API root\" />\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"osvcLinks\" label=\"OSvC Links\" />\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"buiRoot\" label=\"Agent Browser UI\" />\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"buiExtensionLoader\" label=\"Agent Browser UI Extension Loader\" />\r\n        </ResourceGrid>\r\n\r\n        <h2>Developer Cloud Service Git Repository</h2>\r\n        <ResourceGrid>\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"dcsProjectHome\" label=\"Project Home\" />\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"dcsMasterRoot\" label=\"Master Branch Root\" />\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"dcsSshOrigin\" label=\"Clone with SSH\" />\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"dcsHttpsOrigin\" label=\"Clone with HTTPS\" />\r\n        </ResourceGrid>\r\n\r\n        <h2>Soap URLs</h2>\r\n        \r\n        <h3>August 2017+ SOAP URLs</h3>\r\n        <ResourceGrid>\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"connectApiWsdl\" label=\"Connect web service WSDL\" />\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"connectApiWsdl1_2\" label=\"Connect web service WSDL (version 1.2)\" />\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"kfApiWsdl\" label=\"Knowledge Foundation web service WSDL\" />\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"chatApiWsdl\" label=\"Chat web service WSDL\" />\r\n        </ResourceGrid>\r\n        \r\n        <h3>Legacy SOAP URLs</h3>\r\n        <ResourceGrid>\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"legacyConnectApiWsdl\" label=\"Connect web service WSDL\" />\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"legacyConnectApiWsdl1_2\" label=\"Connect web service WSDL (version 1.2)\" />\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"legacyKfApiWsdl\" label=\"Knowledge Foundation web service WSDL\" />\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"legacyChatApiWsdl\" label=\"Chat web service WSDL\" />\r\n        </ResourceGrid>\r\n\r\n        <h2>Other Resources</h2>\r\n        <ResourceGrid>\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"launchArgs\" label=\"Launch command line arguments\" />\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"cpAdminRegex\" label=\"Regex for matching CP Admin URLs\" />\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"newConnectSessionCmdlet\" label=\"New-ConnectSession PS Cmdlet\" />\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"gitRepoSsh\" label=\"Git Repo (SSH)\" />\r\n        </ResourceGrid>\r\n\r\n        <h2>Knowledge Advanced REST API</h2>\r\n        <ResourceGrid>\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"kaContentApiRoot\" label=\"Content API Root URI\" />\r\n          <Resource siteInfo={siteInfo} siteInfoProp=\"kaSearchApiRoot\" label=\"Search API Root URI\" />\r\n        </ResourceGrid>\r\n\r\n        <div className=\"App-info\">{appInfo.name} {appInfo.version}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('App-Container'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}